데이터가 변경될 때 실행되는 다양한 이벤트 (change, input, cu, copy, paste)

1. change
change이벤트는 요소 변경이 끝나면 발생

[텍스트 입력 요소인 경우]
요소 변경이 끝날 때가 아니라 포커스를 잃을 때 이벤트가 발생한다.
ex)
<input type="text" onchange="alert(this.value)">
<input type="button" value="버튼">
버튼을 클릭하는 등의 동작으로 포커스를 잃을 때 이벤트 발생

[select, input type=checkbox, input type=radio]
선택 값이 변경된 직후에 이벤트가 발생한다.


2.input
input이벤트는 사용자가 값을 수정할 때마다 발생한다.
키보드 이벤트와 달리 input이벤트는 어떤 방법으로든 값을 변경할 때 발생한다.
마우스를 사용하여 글자를 붙여 넣거나, 음성인식 기능르 사용해 글자를 입력할 때 처럼 키보드가 아닌 다른 수단을 사용해 값을 변경시킬때도 input 이벤트가 발생한다.
ex)
<input type="text" id="input"> oninput: <span id="result"></span>
<script>
  input.oninput = function() {
    result.innerHTML = input.value;
  };
</script>
** input 이벤트는 방향키 값이 값을 변경시키지 않는 키보드 입력이나 동작에는 반응하지 않는다.
** input 이벤트는 값이 수정되자마자 발생하기 때문에 event.preventDefault()를 사용해 기본 동작을 막더라도 소용이 없다.

3.cut, copy, paste
각각 값을 잘라내기,복사하기. 붙여넣기 할 때 발생한다.
세 이벤트는 clipboardEvent 클래스의 하위 클래스이며, 복사/붙여넣기한 데이터에 접근할 수 있게 해준다.
input이벤트와는 다르게 세 이벤트는 event.preventDefault()로 기본 동작을 막을 수 있다. => 아무것도 복사.붙여넣기할 수 없게됨
ex)
<input type="text" id="input">
<script>
  input.oncut = input.oncopy = input.onpaste = function(event) {
    alert(event.type + ' - ' + event.clipboardData.getData('text/plain'));
    return false;
  };
</script>
위의 코드는  복/붙/잘 동작을 시도하면 모든 동작들이 중단되고, 알럿창을 통해 중단된 이벤트 이름을 보여준다.
**알아두세요! 텍스트뿐만 아니라 모든 것을 복사·붙여넣기 할 수 있습니다. 예를 들어 OS 파일 매니저에서 파일을 복사해 붙여넣을 수 있습니다.

  클립보드에서 읽기·쓰기, 파일 등 다양한 데이터 타입에서 작동하는 메서드 목록 명세서를 확인할 수 있습니다.

  다만 클립보드는 ‘전역’ OS 레벨입니다. onclick 이벤트 핸들러처럼 대부분의 브라우저는 안전을 위해 특정 사용자 동작의 범위에서만 클립보드의 읽기·쓰기에 대한 접근을 허용합니다.

  또한 Firefox를 제외한 모든 브라우저에서 dispatchEvent를 사용하여 ‘커스텀’ 클립보드 이벤트를 생성하는 것을 금지하고 있습니다.


